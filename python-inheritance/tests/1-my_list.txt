===========================
Test cases for 1-my_list.py
===========================

This class MyList inherits from list

Inside of this class we have a function that
sort a list and print it. You can assume that all the
elements of the list will be of type int:

importe module:

    >>> MyList = __import__('1-my_list').MyList

Documentation
=============
Verifying if our modules an funtions are documented.

    >>> module_doc = __import__("1-my_list").__doc__
    >>> print(len(module_doc) > 0)
    True

    >>> class_doc = __import__("1-my_list").MyList.__doc__
    >>> print(len(class_doc) > 0)
    True

    >>> method_doc = __import__("1-my_list").MyList.print_sorted.__doc__
    >>> print(len(method_doc) > 0)
    True

Test Class
==========

Function ``print_sorted`` will take a list, it will be sorted and printed

Object of type list
--------------------
    >>> my_list = MyList()
    >>> type(my_list)
    <class '1-my_list.MyList'>

    >>> isinstance(my_list, list)
    True

Testing append()
-----------------
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> print(my_list)
    [1, 4, 2]

Testing pop()
-------------
    >>> my_list.pop(-1)
    2
    >>> print(my_list)
    [1, 4]

Testing if the list is sorted
------------------------------
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Testing with negative numbers
------------------------------
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.append(-1)
    >>> my_list.append(5)
    >>> my_list.append(-2)
    >>> print(my_list)
    [1, 2, -1, 5, -2]
    >>> my_list.print_sorted()
    [-2, -1, 1, 2, 5]
    >>> print(my_list)
    [1, 2, -1, 5, -2]
