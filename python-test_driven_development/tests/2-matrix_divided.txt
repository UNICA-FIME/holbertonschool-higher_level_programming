=============================
The ``2-matrix_divided`` module
=============================

Using ``matrix_divided``
-----------------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Simple cases:
============================

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

float in the matrix
-----------------------------
    >>> matrix = [[1, 0, 3], [4, 5, 60000.67]]
    >>> matrix_divided(matrix, 0.0876)
    [[11.42, 0.0, 34.25], [45.66, 57.08, 684939.16]]
    
one unique element in the matrix
-----------------------------
    >>> matrix = [[0]]
    >>> matrix_divided(matrix, 2)
    [[0.0]]

TypeError cases:
============================

None in the matrix
-----------------------------
    >>> matrix = [[1.5, 2, 3], [4, 2, None]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

string in the matrix
-----------------------------
    >>> matrix = [[1.5, "2", 3], [4, 2, 3]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Diferents lenght of the matrix's rows
-----------------------------
    >>> matrix = [[1.5, 2, 3], [4, 2, 3], [3, 4]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Boolean for the div
-----------------------------
    >>> matrix = [[1.5, 2.6, 3], [4, 0, 3], [3, 4, 10]]
    >>> matrix_divided(matrix, True)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

number in the rows in the matrix (must be lists)
-----------------------------
    >>> matrix = [[1, 2], [1,2], 3]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

list in a list in the rows in the matrix (must be only lists)
-----------------------------
    >>> matrix = [[[1, 2]], [1, 2]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

tuple in a list in the rows in the matrix (must be only lists)
-----------------------------
    >>> matrix = [[(1, 2)], [1, 2]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

tuple in the rows in the matrix (must be only lists)
-----------------------------
    >>> matrix = [(1, 2), [1, 2]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

ZeroDivisionError cases:
============================
    >>> matrix = [[1.5, 2.6, 3], [4, 0, 3], [3, 4, 10]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

NaN in the matrix
-----------------------------
    >>> matrix_divided([[1.5, 2, 3], [4, 2, NaN]], 3)
    Traceback (most recent call last):
    ...
    NameError: name 'NaN' is not defined

vacue matrix
-----------------------------
    >>> matrix = [[], [], []]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = []
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
