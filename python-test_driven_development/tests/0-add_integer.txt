The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------
This is an text in reStructuredText format. First import
``add_integer`` from the ``0-add_integer`` module:
::
    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:
::
    >>> add_integer(1, 3)
    4
    >>> add_integer(-1, 2)
    1
    >>> add_integer(1.55555, 0.99999)
    1
    >>> add_integer(-1, -8)
    -9
    >>> add_integer(0, 1)
    1
    >>> add_integer(8, 0)
    8
    >>> add_integer(0)
    98
    >>> add_integer('a', 1)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> add_integer(1,'b')
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
    >>> add_integer([1,2], 1)
    Traceback (most recent call last):
       ...
    TypeError: a must be an integer
    >>> add_integer(None)
    Traceback (most recent call last):
       ...
    TypeError: a must be an integer
    >>> add_integer(None, None)
    Traceback (most recent call last):
      ...
    TypeError: a must be an integer
    >>> add_integer('hi', 10)
    Traceback (most recent call last):
      ...
    TypeError: a must be an integer
    >>> add_integer(float('inf'), 0.2)
    Traceback (most recent call last):
      ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(float('juan'), 0.2)
    Traceback (most recent call last):
      ...
    ValueError: cannot convert float NaN to integer
